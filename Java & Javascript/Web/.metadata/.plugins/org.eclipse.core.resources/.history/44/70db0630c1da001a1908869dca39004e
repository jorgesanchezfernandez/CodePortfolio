package Perrera;
/**
 * Clase encargada de administrar los centro. Utiliza el PD Singleton.
 * Tiene 2 posibles funcionalidades, un listado y una busqueda.
 */

import java.util.Date;
import java.util.List;
import java.util.LinkedList;
import java.util.Iterator;


public class CentroAnimalStore{
	
	private static CentroAnimalStore adCentro;
	private List centros;		//lista de centros
	private List animales;		//lista de animales
	
	public static synchronized CentroAnimalStore getInstance(){
		if(adCentro==null)
			adCentro= new CentroAnimalStore();
		return adCentro;
	}
	
	public CentroAnimalStore(){
		/*
		 *	Constructor de la clase, crea dos centros por defecto
		 */
		centros = new LinkedList();
		
		Centro c1=new Centro();
		c1.setCentroID("01");
		c1.setNombre("El Animal Feliz");
		c1.setDescripcion("Centro Dedicado a la adopcion de todo tipo de animales");
		c1.setCodigoPostal(41013);
		c1.setDireccion("C/Arboleda NÂº21");
		c1.setPoblacion("Sevilla");
		c1.setProvincia("Sevilla");
		c1.setTelefono("555678213");
		
		Centro c2=new Centro();
		c2.setCentroID("02");
		c2.setNombre("El pequeÃ±o piolin");
		c2.setDescripcion("Centro Dedicado a la adopcion de canarios");
		c2.setCodigoPostal(41003);
		c2.setDireccion("C/Arboleda NÂº28");
		c2.setPoblacion("Mairena");
		c2.setProvincia("Sevilla");
		c2.setTelefono("555329837");
		
		centros.add(c1);
		centros.add(c2);

		animales= new LinkedList();
		
		Animal a1=new Animal();
		a1.setNombre("Tobi");
		a1.setFechaNacimiento(new Date(2000,11,3));
		a1.setPeso(9);
		a1.setEspecie("canina");
		a1.setNumSerie("000A");
		a1.setVacunas(new LinkedList());
		a1.setPeticiones(new LinkedList());
		
		Animal a2=new Animal();
		a2.setNombre("Rantamplan");
		a2.setFechaNacimiento(new Date(2002,6,9));
		a2.setPeso(6);
		a2.setEspecie("canina");
		a2.setNumSerie("000B");
		a2.setVacunas(new LinkedList());
		a2.setPeticiones(new LinkedList());
		
		Animal a3=new Animal();
		a3.setNombre("Tom");
		a3.setFechaNacimiento(new Date(1995,1,1));
		a3.setPeso(3);
		a3.setEspecie("felina");
		a3.setNumSerie("000C");
		a3.setVacunas(new LinkedList());
		a3.setPeticiones(new LinkedList());

		//añadimos en la lista de animales.
		animales.add(a1);
		animales.add(a2);
		animales.add(a3);
	
		//Creamos las relaciones entre los animales y centros
		c1.getAnimales().add(a1);
		c1.getAnimales().add(a2);
		c2.getAnimales().add(a3);
		
	}
	
	public List getCentros(){
		/*
		 * Nos devuelve la lista con todos los centros
		 */
		return centros;
	}
	
	public Centro getCentro(String nomCentro)throws IndexOutOfBoundsException{
		/*
		 * Nos realiza una busqueda por nombre de centro	==> Nota, podemos utilizar metodo plantilla?
		 */
		Centro result = null;
		Iterator iter = centros.iterator(); 
		while(iter.hasNext() && result==null) {
			Centro cen = (Centro) iter.next();
			if (cen.getCentroID().equals(nomCentro))
				result = cen;
		}
		if(result==null)
			throw new IndexOutOfBoundsException("Centro no disponible");
		return result;				
	}

	public List getAnimales(){
		/*
		 * Nos devuelve la lista con todos los centros
		 */
		return animales;
	}	
}

